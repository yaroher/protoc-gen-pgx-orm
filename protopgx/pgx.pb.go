// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.26.1
// source: pgx.proto

package protopgx

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SqlFiledType int32

const (
	SqlFiledType_UNSPECIFIED      SqlFiledType = 0
	SqlFiledType_TEXT             SqlFiledType = 1
	SqlFiledType_INTEGER          SqlFiledType = 2
	SqlFiledType_BIGINT           SqlFiledType = 3
	SqlFiledType_SMALLINT         SqlFiledType = 4
	SqlFiledType_DOUBLE_PRECISION SqlFiledType = 5
	SqlFiledType_REAL             SqlFiledType = 6
	SqlFiledType_BOOLEAN          SqlFiledType = 7
	SqlFiledType_TIMESTAMPTZ      SqlFiledType = 9
	SqlFiledType_HSTORE           SqlFiledType = 11
	SqlFiledType_CHAR             SqlFiledType = 12
	SqlFiledType_JSONB            SqlFiledType = 15
)

// Enum value maps for SqlFiledType.
var (
	SqlFiledType_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "TEXT",
		2:  "INTEGER",
		3:  "BIGINT",
		4:  "SMALLINT",
		5:  "DOUBLE_PRECISION",
		6:  "REAL",
		7:  "BOOLEAN",
		9:  "TIMESTAMPTZ",
		11: "HSTORE",
		12: "CHAR",
		15: "JSONB",
	}
	SqlFiledType_value = map[string]int32{
		"UNSPECIFIED":      0,
		"TEXT":             1,
		"INTEGER":          2,
		"BIGINT":           3,
		"SMALLINT":         4,
		"DOUBLE_PRECISION": 5,
		"REAL":             6,
		"BOOLEAN":          7,
		"TIMESTAMPTZ":      9,
		"HSTORE":           11,
		"CHAR":             12,
		"JSONB":            15,
	}
)

func (x SqlFiledType) Enum() *SqlFiledType {
	p := new(SqlFiledType)
	*p = x
	return p
}

func (x SqlFiledType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SqlFiledType) Descriptor() protoreflect.EnumDescriptor {
	return file_pgx_proto_enumTypes[0].Descriptor()
}

func (SqlFiledType) Type() protoreflect.EnumType {
	return &file_pgx_proto_enumTypes[0]
}

func (x SqlFiledType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SqlFiledType.Descriptor instead.
func (SqlFiledType) EnumDescriptor() ([]byte, []int) {
	return file_pgx_proto_rawDescGZIP(), []int{0}
}

type ParsedField_ProtoKind int32

const (
	ParsedField_KIND_UNSPECIFIED ParsedField_ProtoKind = 0
	ParsedField_BoolKind         ParsedField_ProtoKind = 8
	ParsedField_EnumKind         ParsedField_ProtoKind = 14
	ParsedField_Int32Kind        ParsedField_ProtoKind = 5
	ParsedField_Sint32Kind       ParsedField_ProtoKind = 17
	ParsedField_Uint32Kind       ParsedField_ProtoKind = 13
	ParsedField_Int64Kind        ParsedField_ProtoKind = 3
	ParsedField_Sint64Kind       ParsedField_ProtoKind = 18
	ParsedField_Uint64Kind       ParsedField_ProtoKind = 4
	ParsedField_Sfixed32Kind     ParsedField_ProtoKind = 15
	ParsedField_Fixed32Kind      ParsedField_ProtoKind = 7
	ParsedField_FloatKind        ParsedField_ProtoKind = 2
	ParsedField_Sfixed64Kind     ParsedField_ProtoKind = 16
	ParsedField_Fixed64Kind      ParsedField_ProtoKind = 6
	ParsedField_DoubleKind       ParsedField_ProtoKind = 1
	ParsedField_StringKind       ParsedField_ProtoKind = 9
	ParsedField_BytesKind        ParsedField_ProtoKind = 12
	ParsedField_MessageKind      ParsedField_ProtoKind = 11
)

// Enum value maps for ParsedField_ProtoKind.
var (
	ParsedField_ProtoKind_name = map[int32]string{
		0:  "KIND_UNSPECIFIED",
		8:  "BoolKind",
		14: "EnumKind",
		5:  "Int32Kind",
		17: "Sint32Kind",
		13: "Uint32Kind",
		3:  "Int64Kind",
		18: "Sint64Kind",
		4:  "Uint64Kind",
		15: "Sfixed32Kind",
		7:  "Fixed32Kind",
		2:  "FloatKind",
		16: "Sfixed64Kind",
		6:  "Fixed64Kind",
		1:  "DoubleKind",
		9:  "StringKind",
		12: "BytesKind",
		11: "MessageKind",
	}
	ParsedField_ProtoKind_value = map[string]int32{
		"KIND_UNSPECIFIED": 0,
		"BoolKind":         8,
		"EnumKind":         14,
		"Int32Kind":        5,
		"Sint32Kind":       17,
		"Uint32Kind":       13,
		"Int64Kind":        3,
		"Sint64Kind":       18,
		"Uint64Kind":       4,
		"Sfixed32Kind":     15,
		"Fixed32Kind":      7,
		"FloatKind":        2,
		"Sfixed64Kind":     16,
		"Fixed64Kind":      6,
		"DoubleKind":       1,
		"StringKind":       9,
		"BytesKind":        12,
		"MessageKind":      11,
	}
)

func (x ParsedField_ProtoKind) Enum() *ParsedField_ProtoKind {
	p := new(ParsedField_ProtoKind)
	*p = x
	return p
}

func (x ParsedField_ProtoKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParsedField_ProtoKind) Descriptor() protoreflect.EnumDescriptor {
	return file_pgx_proto_enumTypes[1].Descriptor()
}

func (ParsedField_ProtoKind) Type() protoreflect.EnumType {
	return &file_pgx_proto_enumTypes[1]
}

func (x ParsedField_ProtoKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParsedField_ProtoKind.Descriptor instead.
func (ParsedField_ProtoKind) EnumDescriptor() ([]byte, []int) {
	return file_pgx_proto_rawDescGZIP(), []int{7, 0}
}

type SqlTable struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Generate      bool                   `protobuf:"varint,1,opt,name=generate,proto3" json:"generate,omitempty"`
	TableName     *string                `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3,oneof" json:"table_name,omitempty"`
	VirtualFields []*SqlVirtualField     `protobuf:"bytes,4,rep,name=virtual_fields,json=virtualFields,proto3" json:"virtual_fields,omitempty"`
	Constraints   []string               `protobuf:"bytes,5,rep,name=constraints,proto3" json:"constraints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SqlTable) Reset() {
	*x = SqlTable{}
	mi := &file_pgx_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SqlTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlTable) ProtoMessage() {}

func (x *SqlTable) ProtoReflect() protoreflect.Message {
	mi := &file_pgx_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlTable.ProtoReflect.Descriptor instead.
func (*SqlTable) Descriptor() ([]byte, []int) {
	return file_pgx_proto_rawDescGZIP(), []int{0}
}

func (x *SqlTable) GetGenerate() bool {
	if x != nil {
		return x.Generate
	}
	return false
}

func (x *SqlTable) GetTableName() string {
	if x != nil && x.TableName != nil {
		return *x.TableName
	}
	return ""
}

func (x *SqlTable) GetVirtualFields() []*SqlVirtualField {
	if x != nil {
		return x.VirtualFields
	}
	return nil
}

func (x *SqlTable) GetConstraints() []string {
	if x != nil {
		return x.Constraints
	}
	return nil
}

type SqlType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  SqlFiledType           `protobuf:"varint,1,opt,name=type,proto3,enum=sql.SqlFiledType" json:"type,omitempty"`
	// string add = 2;
	ForceNotArray bool `protobuf:"varint,3,opt,name=force_not_array,json=forceNotArray,proto3" json:"force_not_array,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SqlType) Reset() {
	*x = SqlType{}
	mi := &file_pgx_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SqlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlType) ProtoMessage() {}

func (x *SqlType) ProtoReflect() protoreflect.Message {
	mi := &file_pgx_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlType.ProtoReflect.Descriptor instead.
func (*SqlType) Descriptor() ([]byte, []int) {
	return file_pgx_proto_rawDescGZIP(), []int{1}
}

func (x *SqlType) GetType() SqlFiledType {
	if x != nil {
		return x.Type
	}
	return SqlFiledType_UNSPECIFIED
}

func (x *SqlType) GetForceNotArray() bool {
	if x != nil {
		return x.ForceNotArray
	}
	return false
}

type SqlConstraint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Unique        bool                   `protobuf:"varint,1,opt,name=unique,proto3" json:"unique,omitempty"`
	PrimaryKey    bool                   `protobuf:"varint,2,opt,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"`
	DefaultValue  string                 `protobuf:"bytes,3,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	Constraint    string                 `protobuf:"bytes,4,opt,name=constraint,proto3" json:"constraint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SqlConstraint) Reset() {
	*x = SqlConstraint{}
	mi := &file_pgx_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SqlConstraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlConstraint) ProtoMessage() {}

func (x *SqlConstraint) ProtoReflect() protoreflect.Message {
	mi := &file_pgx_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlConstraint.ProtoReflect.Descriptor instead.
func (*SqlConstraint) Descriptor() ([]byte, []int) {
	return file_pgx_proto_rawDescGZIP(), []int{2}
}

func (x *SqlConstraint) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

func (x *SqlConstraint) GetPrimaryKey() bool {
	if x != nil {
		return x.PrimaryKey
	}
	return false
}

func (x *SqlConstraint) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *SqlConstraint) GetConstraint() string {
	if x != nil {
		return x.Constraint
	}
	return ""
}

type SqlVirtualField struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SqlName       string                 `protobuf:"bytes,1,opt,name=sql_name,json=sqlName,proto3" json:"sql_name,omitempty"`
	SqlType       *SqlType               `protobuf:"bytes,2,opt,name=sql_type,json=sqlType,proto3" json:"sql_type,omitempty"`
	Constraints   *SqlConstraint         `protobuf:"bytes,3,opt,name=constraints,proto3" json:"constraints,omitempty"`
	IsNullable    bool                   `protobuf:"varint,101,opt,name=is_nullable,json=isNullable,proto3" json:"is_nullable,omitempty"`
	IsArray       bool                   `protobuf:"varint,102,opt,name=is_array,json=isArray,proto3" json:"is_array,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SqlVirtualField) Reset() {
	*x = SqlVirtualField{}
	mi := &file_pgx_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SqlVirtualField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlVirtualField) ProtoMessage() {}

func (x *SqlVirtualField) ProtoReflect() protoreflect.Message {
	mi := &file_pgx_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlVirtualField.ProtoReflect.Descriptor instead.
func (*SqlVirtualField) Descriptor() ([]byte, []int) {
	return file_pgx_proto_rawDescGZIP(), []int{3}
}

func (x *SqlVirtualField) GetSqlName() string {
	if x != nil {
		return x.SqlName
	}
	return ""
}

func (x *SqlVirtualField) GetSqlType() *SqlType {
	if x != nil {
		return x.SqlType
	}
	return nil
}

func (x *SqlVirtualField) GetConstraints() *SqlConstraint {
	if x != nil {
		return x.Constraints
	}
	return nil
}

func (x *SqlVirtualField) GetIsNullable() bool {
	if x != nil {
		return x.IsNullable
	}
	return false
}

func (x *SqlVirtualField) GetIsArray() bool {
	if x != nil {
		return x.IsArray
	}
	return false
}

type SqlField struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Skip        bool                   `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	SqlType     *SqlType               `protobuf:"bytes,2,opt,name=sql_type,json=sqlType,proto3" json:"sql_type,omitempty"`
	Constraints *SqlConstraint         `protobuf:"bytes,3,opt,name=constraints,proto3" json:"constraints,omitempty"`
	// if message kind is message chose embed it or serialize if both are false skip field
	EmbeddedMessage   bool `protobuf:"varint,8,opt,name=embedded_message,json=embeddedMessage,proto3" json:"embedded_message,omitempty"`
	SerializedMessage bool `protobuf:"varint,9,opt,name=serialized_message,json=serializedMessage,proto3" json:"serialized_message,omitempty"` // only for virtual fields
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SqlField) Reset() {
	*x = SqlField{}
	mi := &file_pgx_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SqlField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlField) ProtoMessage() {}

func (x *SqlField) ProtoReflect() protoreflect.Message {
	mi := &file_pgx_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlField.ProtoReflect.Descriptor instead.
func (*SqlField) Descriptor() ([]byte, []int) {
	return file_pgx_proto_rawDescGZIP(), []int{4}
}

func (x *SqlField) GetSkip() bool {
	if x != nil {
		return x.Skip
	}
	return false
}

func (x *SqlField) GetSqlType() *SqlType {
	if x != nil {
		return x.SqlType
	}
	return nil
}

func (x *SqlField) GetConstraints() *SqlConstraint {
	if x != nil {
		return x.Constraints
	}
	return nil
}

func (x *SqlField) GetEmbeddedMessage() bool {
	if x != nil {
		return x.EmbeddedMessage
	}
	return false
}

func (x *SqlField) GetSerializedMessage() bool {
	if x != nil {
		return x.SerializedMessage
	}
	return false
}

type SqlRelation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Relation:
	//
	//	*SqlRelation_OneToMany_
	//	*SqlRelation_ManyToMany_
	Relation      isSqlRelation_Relation `protobuf_oneof:"relation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SqlRelation) Reset() {
	*x = SqlRelation{}
	mi := &file_pgx_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SqlRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlRelation) ProtoMessage() {}

func (x *SqlRelation) ProtoReflect() protoreflect.Message {
	mi := &file_pgx_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlRelation.ProtoReflect.Descriptor instead.
func (*SqlRelation) Descriptor() ([]byte, []int) {
	return file_pgx_proto_rawDescGZIP(), []int{5}
}

func (x *SqlRelation) GetRelation() isSqlRelation_Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

func (x *SqlRelation) GetOneToMany() *SqlRelation_OneToMany {
	if x != nil {
		if x, ok := x.Relation.(*SqlRelation_OneToMany_); ok {
			return x.OneToMany
		}
	}
	return nil
}

func (x *SqlRelation) GetManyToMany() *SqlRelation_ManyToMany {
	if x != nil {
		if x, ok := x.Relation.(*SqlRelation_ManyToMany_); ok {
			return x.ManyToMany
		}
	}
	return nil
}

type isSqlRelation_Relation interface {
	isSqlRelation_Relation()
}

type SqlRelation_OneToMany_ struct {
	OneToMany *SqlRelation_OneToMany `protobuf:"bytes,1,opt,name=one_to_many,json=oneToMany,proto3,oneof"`
}

type SqlRelation_ManyToMany_ struct {
	ManyToMany *SqlRelation_ManyToMany `protobuf:"bytes,2,opt,name=many_to_many,json=manyToMany,proto3,oneof"`
}

func (*SqlRelation_OneToMany_) isSqlRelation_Relation() {}

func (*SqlRelation_ManyToMany_) isSqlRelation_Relation() {}

type CasterFn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	CallSignature string                 `protobuf:"bytes,3,opt,name=call_signature,json=callSignature,proto3" json:"call_signature,omitempty"`
	UserDefined   bool                   `protobuf:"varint,4,opt,name=user_defined,json=userDefined,proto3" json:"user_defined,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CasterFn) Reset() {
	*x = CasterFn{}
	mi := &file_pgx_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CasterFn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasterFn) ProtoMessage() {}

func (x *CasterFn) ProtoReflect() protoreflect.Message {
	mi := &file_pgx_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasterFn.ProtoReflect.Descriptor instead.
func (*CasterFn) Descriptor() ([]byte, []int) {
	return file_pgx_proto_rawDescGZIP(), []int{6}
}

func (x *CasterFn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CasterFn) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CasterFn) GetCallSignature() string {
	if x != nil {
		return x.CallSignature
	}
	return ""
}

func (x *CasterFn) GetUserDefined() bool {
	if x != nil {
		return x.UserDefined
	}
	return false
}

type ParsedField struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	TypeInfo                 *ParsedField_TypeInfo  `protobuf:"bytes,4,opt,name=type_info,json=typeInfo,proto3" json:"type_info,omitempty"`
	Constraint               *SqlConstraint         `protobuf:"bytes,5,opt,name=constraint,proto3" json:"constraint,omitempty"`
	FromOneOfField           string                 `protobuf:"bytes,7,opt,name=from_one_of_field,json=fromOneOfField,proto3" json:"from_one_of_field,omitempty"`
	FromOneOfFieldType       string                 `protobuf:"bytes,8,opt,name=from_one_of_field_type,json=fromOneOfFieldType,proto3" json:"from_one_of_field_type,omitempty"`
	ProtoName                string                 `protobuf:"bytes,9,opt,name=proto_name,json=protoName,proto3" json:"proto_name,omitempty"`
	Virtual                  bool                   `protobuf:"varint,10,opt,name=virtual,proto3" json:"virtual,omitempty"`
	FromEmbeddedMessageField string                 `protobuf:"bytes,11,opt,name=from_embedded_message_field,json=fromEmbeddedMessageField,proto3" json:"from_embedded_message_field,omitempty"`
	FromEmbeddedMessageType  string                 `protobuf:"bytes,12,opt,name=from_embedded_message_type,json=fromEmbeddedMessageType,proto3" json:"from_embedded_message_type,omitempty"`
	Embedded                 bool                   `protobuf:"varint,13,opt,name=embedded,proto3" json:"embedded,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ParsedField) Reset() {
	*x = ParsedField{}
	mi := &file_pgx_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParsedField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParsedField) ProtoMessage() {}

func (x *ParsedField) ProtoReflect() protoreflect.Message {
	mi := &file_pgx_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParsedField.ProtoReflect.Descriptor instead.
func (*ParsedField) Descriptor() ([]byte, []int) {
	return file_pgx_proto_rawDescGZIP(), []int{7}
}

func (x *ParsedField) GetTypeInfo() *ParsedField_TypeInfo {
	if x != nil {
		return x.TypeInfo
	}
	return nil
}

func (x *ParsedField) GetConstraint() *SqlConstraint {
	if x != nil {
		return x.Constraint
	}
	return nil
}

func (x *ParsedField) GetFromOneOfField() string {
	if x != nil {
		return x.FromOneOfField
	}
	return ""
}

func (x *ParsedField) GetFromOneOfFieldType() string {
	if x != nil {
		return x.FromOneOfFieldType
	}
	return ""
}

func (x *ParsedField) GetProtoName() string {
	if x != nil {
		return x.ProtoName
	}
	return ""
}

func (x *ParsedField) GetVirtual() bool {
	if x != nil {
		return x.Virtual
	}
	return false
}

func (x *ParsedField) GetFromEmbeddedMessageField() string {
	if x != nil {
		return x.FromEmbeddedMessageField
	}
	return ""
}

func (x *ParsedField) GetFromEmbeddedMessageType() string {
	if x != nil {
		return x.FromEmbeddedMessageType
	}
	return ""
}

func (x *ParsedField) GetEmbedded() bool {
	if x != nil {
		return x.Embedded
	}
	return false
}

type SqlRelation_OneToMany struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RefName         string                 `protobuf:"bytes,1,opt,name=ref_name,json=refName,proto3" json:"ref_name,omitempty"`
	Constraint      string                 `protobuf:"bytes,2,opt,name=constraint,proto3" json:"constraint,omitempty"`
	OnDeleteCascade bool                   `protobuf:"varint,3,opt,name=on_delete_cascade,json=onDeleteCascade,proto3" json:"on_delete_cascade,omitempty"`
	ExistedField    bool                   `protobuf:"varint,4,opt,name=existed_field,json=existedField,proto3" json:"existed_field,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SqlRelation_OneToMany) Reset() {
	*x = SqlRelation_OneToMany{}
	mi := &file_pgx_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SqlRelation_OneToMany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlRelation_OneToMany) ProtoMessage() {}

func (x *SqlRelation_OneToMany) ProtoReflect() protoreflect.Message {
	mi := &file_pgx_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlRelation_OneToMany.ProtoReflect.Descriptor instead.
func (*SqlRelation_OneToMany) Descriptor() ([]byte, []int) {
	return file_pgx_proto_rawDescGZIP(), []int{5, 0}
}

func (x *SqlRelation_OneToMany) GetRefName() string {
	if x != nil {
		return x.RefName
	}
	return ""
}

func (x *SqlRelation_OneToMany) GetConstraint() string {
	if x != nil {
		return x.Constraint
	}
	return ""
}

func (x *SqlRelation_OneToMany) GetOnDeleteCascade() bool {
	if x != nil {
		return x.OnDeleteCascade
	}
	return false
}

func (x *SqlRelation_OneToMany) GetExistedField() bool {
	if x != nil {
		return x.ExistedField
	}
	return false
}

type SqlRelation_ManyToMany struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Table                  *SqlTable              `protobuf:"bytes,1,opt,name=table,proto3,oneof" json:"table,omitempty"`
	RefOnDeleteCascade     bool                   `protobuf:"varint,2,opt,name=ref_on_delete_cascade,json=refOnDeleteCascade,proto3" json:"ref_on_delete_cascade,omitempty"`
	RefConstraint          string                 `protobuf:"bytes,3,opt,name=ref_constraint,json=refConstraint,proto3" json:"ref_constraint,omitempty"`
	BackRefOnDeleteCascade bool                   `protobuf:"varint,4,opt,name=back_ref_on_delete_cascade,json=backRefOnDeleteCascade,proto3" json:"back_ref_on_delete_cascade,omitempty"`
	BackRefConstraint      string                 `protobuf:"bytes,5,opt,name=back_ref_constraint,json=backRefConstraint,proto3" json:"back_ref_constraint,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SqlRelation_ManyToMany) Reset() {
	*x = SqlRelation_ManyToMany{}
	mi := &file_pgx_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SqlRelation_ManyToMany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlRelation_ManyToMany) ProtoMessage() {}

func (x *SqlRelation_ManyToMany) ProtoReflect() protoreflect.Message {
	mi := &file_pgx_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlRelation_ManyToMany.ProtoReflect.Descriptor instead.
func (*SqlRelation_ManyToMany) Descriptor() ([]byte, []int) {
	return file_pgx_proto_rawDescGZIP(), []int{5, 1}
}

func (x *SqlRelation_ManyToMany) GetTable() *SqlTable {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *SqlRelation_ManyToMany) GetRefOnDeleteCascade() bool {
	if x != nil {
		return x.RefOnDeleteCascade
	}
	return false
}

func (x *SqlRelation_ManyToMany) GetRefConstraint() string {
	if x != nil {
		return x.RefConstraint
	}
	return ""
}

func (x *SqlRelation_ManyToMany) GetBackRefOnDeleteCascade() bool {
	if x != nil {
		return x.BackRefOnDeleteCascade
	}
	return false
}

func (x *SqlRelation_ManyToMany) GetBackRefConstraint() string {
	if x != nil {
		return x.BackRefConstraint
	}
	return ""
}

type ParsedField_TypeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SqlType       *SqlType               `protobuf:"bytes,1,opt,name=sql_type,json=sqlType,proto3" json:"sql_type,omitempty"`
	PgxType       string                 `protobuf:"bytes,2,opt,name=pgx_type,json=pgxType,proto3" json:"pgx_type,omitempty"`
	UpCasterFn    *CasterFn              `protobuf:"bytes,5,opt,name=up_caster_fn,json=upCasterFn,proto3" json:"up_caster_fn,omitempty"`
	DownCasterFn  *CasterFn              `protobuf:"bytes,6,opt,name=down_caster_fn,json=downCasterFn,proto3" json:"down_caster_fn,omitempty"`
	Nullable      bool                   `protobuf:"varint,7,opt,name=nullable,proto3" json:"nullable,omitempty"`              // from proto
	IsArray       bool                   `protobuf:"varint,8,opt,name=is_array,json=isArray,proto3" json:"is_array,omitempty"` // from proto
	ProtoKind     ParsedField_ProtoKind  `protobuf:"varint,9,opt,name=proto_kind,json=protoKind,proto3,enum=sql.ParsedField_ProtoKind" json:"proto_kind,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParsedField_TypeInfo) Reset() {
	*x = ParsedField_TypeInfo{}
	mi := &file_pgx_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParsedField_TypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParsedField_TypeInfo) ProtoMessage() {}

func (x *ParsedField_TypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pgx_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParsedField_TypeInfo.ProtoReflect.Descriptor instead.
func (*ParsedField_TypeInfo) Descriptor() ([]byte, []int) {
	return file_pgx_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ParsedField_TypeInfo) GetSqlType() *SqlType {
	if x != nil {
		return x.SqlType
	}
	return nil
}

func (x *ParsedField_TypeInfo) GetPgxType() string {
	if x != nil {
		return x.PgxType
	}
	return ""
}

func (x *ParsedField_TypeInfo) GetUpCasterFn() *CasterFn {
	if x != nil {
		return x.UpCasterFn
	}
	return nil
}

func (x *ParsedField_TypeInfo) GetDownCasterFn() *CasterFn {
	if x != nil {
		return x.DownCasterFn
	}
	return nil
}

func (x *ParsedField_TypeInfo) GetNullable() bool {
	if x != nil {
		return x.Nullable
	}
	return false
}

func (x *ParsedField_TypeInfo) GetIsArray() bool {
	if x != nil {
		return x.IsArray
	}
	return false
}

func (x *ParsedField_TypeInfo) GetProtoKind() ParsedField_ProtoKind {
	if x != nil {
		return x.ProtoKind
	}
	return ParsedField_KIND_UNSPECIFIED
}

var file_pgx_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: ([]string)(nil),
		Field:         781254,
		Name:          "sql.additional_code",
		Tag:           "bytes,781254,rep,name=additional_code",
		Filename:      "pgx.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*SqlTable)(nil),
		Field:         1001,
		Name:          "sql.sql_table",
		Tag:           "bytes,1001,opt,name=sql_table",
		Filename:      "pgx.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*SqlField)(nil),
		Field:         1001,
		Name:          "sql.sql_field",
		Tag:           "bytes,1001,opt,name=sql_field",
		Filename:      "pgx.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*SqlRelation)(nil),
		Field:         1002,
		Name:          "sql.sql_relation",
		Tag:           "bytes,1002,opt,name=sql_relation",
		Filename:      "pgx.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// repeated string additional_code = 781254;
	E_AdditionalCode = &file_pgx_proto_extTypes[0]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional sql.SqlTable sql_table = 1001;
	E_SqlTable = &file_pgx_proto_extTypes[1]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional sql.SqlField sql_field = 1001;
	E_SqlField = &file_pgx_proto_extTypes[2]
	// optional sql.SqlRelation sql_relation = 1002;
	E_SqlRelation = &file_pgx_proto_extTypes[3]
)

var File_pgx_proto protoreflect.FileDescriptor

const file_pgx_proto_rawDesc = "" +
	"\n" +
	"\tpgx.proto\x12\x03sql\x1a google/protobuf/descriptor.proto\"\xb8\x01\n" +
	"\bSqlTable\x12\x1a\n" +
	"\bgenerate\x18\x01 \x01(\bR\bgenerate\x12\"\n" +
	"\n" +
	"table_name\x18\x02 \x01(\tH\x00R\ttableName\x88\x01\x01\x12;\n" +
	"\x0evirtual_fields\x18\x04 \x03(\v2\x14.sql.SqlVirtualFieldR\rvirtualFields\x12 \n" +
	"\vconstraints\x18\x05 \x03(\tR\vconstraintsB\r\n" +
	"\v_table_name\"X\n" +
	"\aSqlType\x12%\n" +
	"\x04type\x18\x01 \x01(\x0e2\x11.sql.SqlFiledTypeR\x04type\x12&\n" +
	"\x0fforce_not_array\x18\x03 \x01(\bR\rforceNotArray\"\x8d\x01\n" +
	"\rSqlConstraint\x12\x16\n" +
	"\x06unique\x18\x01 \x01(\bR\x06unique\x12\x1f\n" +
	"\vprimary_key\x18\x02 \x01(\bR\n" +
	"primaryKey\x12#\n" +
	"\rdefault_value\x18\x03 \x01(\tR\fdefaultValue\x12\x1e\n" +
	"\n" +
	"constraint\x18\x04 \x01(\tR\n" +
	"constraint\"\xc7\x01\n" +
	"\x0fSqlVirtualField\x12\x19\n" +
	"\bsql_name\x18\x01 \x01(\tR\asqlName\x12'\n" +
	"\bsql_type\x18\x02 \x01(\v2\f.sql.SqlTypeR\asqlType\x124\n" +
	"\vconstraints\x18\x03 \x01(\v2\x12.sql.SqlConstraintR\vconstraints\x12\x1f\n" +
	"\vis_nullable\x18e \x01(\bR\n" +
	"isNullable\x12\x19\n" +
	"\bis_array\x18f \x01(\bR\aisArray\"\xd7\x01\n" +
	"\bSqlField\x12\x12\n" +
	"\x04skip\x18\x01 \x01(\bR\x04skip\x12'\n" +
	"\bsql_type\x18\x02 \x01(\v2\f.sql.SqlTypeR\asqlType\x124\n" +
	"\vconstraints\x18\x03 \x01(\v2\x12.sql.SqlConstraintR\vconstraints\x12)\n" +
	"\x10embedded_message\x18\b \x01(\bR\x0fembeddedMessage\x12-\n" +
	"\x12serialized_message\x18\t \x01(\bR\x11serializedMessage\"\xbb\x04\n" +
	"\vSqlRelation\x12<\n" +
	"\vone_to_many\x18\x01 \x01(\v2\x1a.sql.SqlRelation.OneToManyH\x00R\toneToMany\x12?\n" +
	"\fmany_to_many\x18\x02 \x01(\v2\x1b.sql.SqlRelation.ManyToManyH\x00R\n" +
	"manyToMany\x1a\x97\x01\n" +
	"\tOneToMany\x12\x19\n" +
	"\bref_name\x18\x01 \x01(\tR\arefName\x12\x1e\n" +
	"\n" +
	"constraint\x18\x02 \x01(\tR\n" +
	"constraint\x12*\n" +
	"\x11on_delete_cascade\x18\x03 \x01(\bR\x0fonDeleteCascade\x12#\n" +
	"\rexisted_field\x18\x04 \x01(\bR\fexistedField\x1a\x86\x02\n" +
	"\n" +
	"ManyToMany\x12(\n" +
	"\x05table\x18\x01 \x01(\v2\r.sql.SqlTableH\x00R\x05table\x88\x01\x01\x121\n" +
	"\x15ref_on_delete_cascade\x18\x02 \x01(\bR\x12refOnDeleteCascade\x12%\n" +
	"\x0eref_constraint\x18\x03 \x01(\tR\rrefConstraint\x12:\n" +
	"\x1aback_ref_on_delete_cascade\x18\x04 \x01(\bR\x16backRefOnDeleteCascade\x12.\n" +
	"\x13back_ref_constraint\x18\x05 \x01(\tR\x11backRefConstraintB\b\n" +
	"\x06_tableB\n" +
	"\n" +
	"\brelation\"|\n" +
	"\bCasterFn\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12%\n" +
	"\x0ecall_signature\x18\x03 \x01(\tR\rcallSignature\x12!\n" +
	"\fuser_defined\x18\x04 \x01(\bR\vuserDefined\"\x85\b\n" +
	"\vParsedField\x126\n" +
	"\ttype_info\x18\x04 \x01(\v2\x19.sql.ParsedField.TypeInfoR\btypeInfo\x122\n" +
	"\n" +
	"constraint\x18\x05 \x01(\v2\x12.sql.SqlConstraintR\n" +
	"constraint\x12)\n" +
	"\x11from_one_of_field\x18\a \x01(\tR\x0efromOneOfField\x122\n" +
	"\x16from_one_of_field_type\x18\b \x01(\tR\x12fromOneOfFieldType\x12\x1d\n" +
	"\n" +
	"proto_name\x18\t \x01(\tR\tprotoName\x12\x18\n" +
	"\avirtual\x18\n" +
	" \x01(\bR\avirtual\x12=\n" +
	"\x1bfrom_embedded_message_field\x18\v \x01(\tR\x18fromEmbeddedMessageField\x12;\n" +
	"\x1afrom_embedded_message_type\x18\f \x01(\tR\x17fromEmbeddedMessageType\x12\x1a\n" +
	"\bembedded\x18\r \x01(\bR\bembedded\x1a\xa6\x02\n" +
	"\bTypeInfo\x12'\n" +
	"\bsql_type\x18\x01 \x01(\v2\f.sql.SqlTypeR\asqlType\x12\x19\n" +
	"\bpgx_type\x18\x02 \x01(\tR\apgxType\x12/\n" +
	"\fup_caster_fn\x18\x05 \x01(\v2\r.sql.CasterFnR\n" +
	"upCasterFn\x123\n" +
	"\x0edown_caster_fn\x18\x06 \x01(\v2\r.sql.CasterFnR\fdownCasterFn\x12\x1a\n" +
	"\bnullable\x18\a \x01(\bR\bnullable\x12\x19\n" +
	"\bis_array\x18\b \x01(\bR\aisArray\x129\n" +
	"\n" +
	"proto_kind\x18\t \x01(\x0e2\x1a.sql.ParsedField.ProtoKindR\tprotoKind\"\xb0\x02\n" +
	"\tProtoKind\x12\x14\n" +
	"\x10KIND_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bBoolKind\x10\b\x12\f\n" +
	"\bEnumKind\x10\x0e\x12\r\n" +
	"\tInt32Kind\x10\x05\x12\x0e\n" +
	"\n" +
	"Sint32Kind\x10\x11\x12\x0e\n" +
	"\n" +
	"Uint32Kind\x10\r\x12\r\n" +
	"\tInt64Kind\x10\x03\x12\x0e\n" +
	"\n" +
	"Sint64Kind\x10\x12\x12\x0e\n" +
	"\n" +
	"Uint64Kind\x10\x04\x12\x10\n" +
	"\fSfixed32Kind\x10\x0f\x12\x0f\n" +
	"\vFixed32Kind\x10\a\x12\r\n" +
	"\tFloatKind\x10\x02\x12\x10\n" +
	"\fSfixed64Kind\x10\x10\x12\x0f\n" +
	"\vFixed64Kind\x10\x06\x12\x0e\n" +
	"\n" +
	"DoubleKind\x10\x01\x12\x0e\n" +
	"\n" +
	"StringKind\x10\t\x12\r\n" +
	"\tBytesKind\x10\f\x12\x0f\n" +
	"\vMessageKind\x10\v*\xaf\x01\n" +
	"\fSqlFiledType\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\b\n" +
	"\x04TEXT\x10\x01\x12\v\n" +
	"\aINTEGER\x10\x02\x12\n" +
	"\n" +
	"\x06BIGINT\x10\x03\x12\f\n" +
	"\bSMALLINT\x10\x04\x12\x14\n" +
	"\x10DOUBLE_PRECISION\x10\x05\x12\b\n" +
	"\x04REAL\x10\x06\x12\v\n" +
	"\aBOOLEAN\x10\a\x12\x0f\n" +
	"\vTIMESTAMPTZ\x10\t\x12\n" +
	"\n" +
	"\x06HSTORE\x10\v\x12\b\n" +
	"\x04CHAR\x10\f\x12\t\n" +
	"\x05JSONB\x10\x0f:G\n" +
	"\x0fadditional_code\x12\x1c.google.protobuf.FileOptions\x18\xc6\xd7/ \x03(\tR\x0eadditionalCode:L\n" +
	"\tsql_table\x12\x1f.google.protobuf.MessageOptions\x18\xe9\a \x01(\v2\r.sql.SqlTableR\bsqlTable:J\n" +
	"\tsql_field\x12\x1d.google.protobuf.FieldOptions\x18\xe9\a \x01(\v2\r.sql.SqlFieldR\bsqlField:S\n" +
	"\fsql_relation\x12\x1d.google.protobuf.FieldOptions\x18\xea\a \x01(\v2\x10.sql.SqlRelationR\vsqlRelationB0Z.github.com/yaroher/protoc-gen-pgx-orm/protopgxb\x06proto3"

var (
	file_pgx_proto_rawDescOnce sync.Once
	file_pgx_proto_rawDescData []byte
)

func file_pgx_proto_rawDescGZIP() []byte {
	file_pgx_proto_rawDescOnce.Do(func() {
		file_pgx_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pgx_proto_rawDesc), len(file_pgx_proto_rawDesc)))
	})
	return file_pgx_proto_rawDescData
}

var file_pgx_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pgx_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_pgx_proto_goTypes = []any{
	(SqlFiledType)(0),                   // 0: sql.SqlFiledType
	(ParsedField_ProtoKind)(0),          // 1: sql.ParsedField.ProtoKind
	(*SqlTable)(nil),                    // 2: sql.SqlTable
	(*SqlType)(nil),                     // 3: sql.SqlType
	(*SqlConstraint)(nil),               // 4: sql.SqlConstraint
	(*SqlVirtualField)(nil),             // 5: sql.SqlVirtualField
	(*SqlField)(nil),                    // 6: sql.SqlField
	(*SqlRelation)(nil),                 // 7: sql.SqlRelation
	(*CasterFn)(nil),                    // 8: sql.CasterFn
	(*ParsedField)(nil),                 // 9: sql.ParsedField
	(*SqlRelation_OneToMany)(nil),       // 10: sql.SqlRelation.OneToMany
	(*SqlRelation_ManyToMany)(nil),      // 11: sql.SqlRelation.ManyToMany
	(*ParsedField_TypeInfo)(nil),        // 12: sql.ParsedField.TypeInfo
	(*descriptorpb.FileOptions)(nil),    // 13: google.protobuf.FileOptions
	(*descriptorpb.MessageOptions)(nil), // 14: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),   // 15: google.protobuf.FieldOptions
}
var file_pgx_proto_depIdxs = []int32{
	5,  // 0: sql.SqlTable.virtual_fields:type_name -> sql.SqlVirtualField
	0,  // 1: sql.SqlType.type:type_name -> sql.SqlFiledType
	3,  // 2: sql.SqlVirtualField.sql_type:type_name -> sql.SqlType
	4,  // 3: sql.SqlVirtualField.constraints:type_name -> sql.SqlConstraint
	3,  // 4: sql.SqlField.sql_type:type_name -> sql.SqlType
	4,  // 5: sql.SqlField.constraints:type_name -> sql.SqlConstraint
	10, // 6: sql.SqlRelation.one_to_many:type_name -> sql.SqlRelation.OneToMany
	11, // 7: sql.SqlRelation.many_to_many:type_name -> sql.SqlRelation.ManyToMany
	12, // 8: sql.ParsedField.type_info:type_name -> sql.ParsedField.TypeInfo
	4,  // 9: sql.ParsedField.constraint:type_name -> sql.SqlConstraint
	2,  // 10: sql.SqlRelation.ManyToMany.table:type_name -> sql.SqlTable
	3,  // 11: sql.ParsedField.TypeInfo.sql_type:type_name -> sql.SqlType
	8,  // 12: sql.ParsedField.TypeInfo.up_caster_fn:type_name -> sql.CasterFn
	8,  // 13: sql.ParsedField.TypeInfo.down_caster_fn:type_name -> sql.CasterFn
	1,  // 14: sql.ParsedField.TypeInfo.proto_kind:type_name -> sql.ParsedField.ProtoKind
	13, // 15: sql.additional_code:extendee -> google.protobuf.FileOptions
	14, // 16: sql.sql_table:extendee -> google.protobuf.MessageOptions
	15, // 17: sql.sql_field:extendee -> google.protobuf.FieldOptions
	15, // 18: sql.sql_relation:extendee -> google.protobuf.FieldOptions
	2,  // 19: sql.sql_table:type_name -> sql.SqlTable
	6,  // 20: sql.sql_field:type_name -> sql.SqlField
	7,  // 21: sql.sql_relation:type_name -> sql.SqlRelation
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	19, // [19:22] is the sub-list for extension type_name
	15, // [15:19] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_pgx_proto_init() }
func file_pgx_proto_init() {
	if File_pgx_proto != nil {
		return
	}
	file_pgx_proto_msgTypes[0].OneofWrappers = []any{}
	file_pgx_proto_msgTypes[5].OneofWrappers = []any{
		(*SqlRelation_OneToMany_)(nil),
		(*SqlRelation_ManyToMany_)(nil),
	}
	file_pgx_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pgx_proto_rawDesc), len(file_pgx_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 4,
			NumServices:   0,
		},
		GoTypes:           file_pgx_proto_goTypes,
		DependencyIndexes: file_pgx_proto_depIdxs,
		EnumInfos:         file_pgx_proto_enumTypes,
		MessageInfos:      file_pgx_proto_msgTypes,
		ExtensionInfos:    file_pgx_proto_extTypes,
	}.Build()
	File_pgx_proto = out.File
	file_pgx_proto_goTypes = nil
	file_pgx_proto_depIdxs = nil
}
